<project>
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.vermucht</groupId>
    <artifactId>todo-list</artifactId>
    <packaging>war</packaging>
    <version>0.1</version>
    <name>todo-list</name>

    <!-- General properties for all -->
    <properties>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <liquibase.changeLogFile>target/classes/db/master.xml</liquibase.changeLogFile>
        <liquibase.promptOnNonLocalDatabase>false</liquibase.promptOnNonLocalDatabase>
        <liquibase.dropFirst>true</liquibase.dropFirst>
        <hibernate.sql.dialect>org.hibernate.dialect.PostgreSQL95Dialect</hibernate.sql.dialect>
    </properties>

    <profiles>
        <!--
          ** Profile to deploy on heroku.com
        -->
        <profile>
            <id>heroku</id>
            <activation>
                <activeByDefault>false</activeByDefault>
                <property>
                    <name>env.HOME</name>
                    <value>/app</value>
                </property>
            </activation>
            <properties>
                <!--
                  ** These properties are parsed from Heroku environment variables
                  ** using gmaven plugin
                -->
                <!--suppress UnresolvedMavenProperty -->
                <db.url>${heroku.db.jdbcUrl}</db.url>
                <!--suppress UnresolvedMavenProperty -->
                <db.username>${heroku.db.username}</db.username>
                <!--suppress UnresolvedMavenProperty -->
                <db.password>${heroku.db.password}</db.password>
                <db.driver>org.postgresql.Driver</db.driver>
            </properties>
            <build>
                <plugins>
                    <!--
                      ** Liquibase will start separately after project build,
                      ** iun the release phase (see Procfile).
                      ** But we set all necessary properties for the run here.
                    -->
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <version>3.6.3</version>
                        <configuration>
                            <propertyFile>target/classes/db/heroku.properties</propertyFile>
                            <changeLogFile>${liquibase.changeLogFile}</changeLogFile>
                            <promptOnNonLocalDatabase>${liquibase.promptOnNonLocalDatabase}</promptOnNonLocalDatabase>
                            <dropFirst>${liquibase.dropFirst}</dropFirst>
                        </configuration>
                    </plugin>
                    <!--
                      ** Parses jdbc url, username, password from Heroku environment variables.
                      ** Script language is Groovy.
                    -->
                    <plugin>
                        <groupId>org.codehaus.gmavenplus</groupId>
                        <artifactId>gmavenplus-plugin</artifactId>
                        <version>1.2</version>
                        <executions>
                            <execution>
                                <phase>initialize</phase>
                                <goals>
                                    <goal>execute</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <scripts>
                                <script>
                                    <![CDATA[
                                        URI dbUri = new URI(System.getenv("DATABASE_URL"));
                                        String username = dbUri.getUserInfo().split(":")[0];
                                        String password = dbUri.getUserInfo().split(":")[1];
                                        int port = dbUri.getPort();
                                        String dbUrl = "jdbc:postgresql://" + dbUri.getHost() + ":" + port + dbUri.getPath();
                                        project.properties['heroku.db.jdbcUrl'] = dbUrl
                                        project.properties['heroku.db.username'] = username
                                        project.properties['heroku.db.password'] = password
                                    ]]>
                                </script>
                            </scripts>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <!--
          ** Profile for local tests on testing database.
        -->
        <profile>
            <id>test</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <properties>
                <db.url>jdbc:postgresql://127.0.0.1:5432/test_db</db.url>
                <db.username>tester</db.username>
                <db.password>password</db.password>
                <db.driver>org.postgresql.Driver</db.driver>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.liquibase</groupId>
                        <artifactId>liquibase-maven-plugin</artifactId>
                        <version>3.6.3</version>
                        <configuration>
                            <propertyFile>target/classes/db/test.properties</propertyFile>
                            <changeLogFile>${liquibase.changeLogFile}</changeLogFile>
                            <promptOnNonLocalDatabase>${liquibase.promptOnNonLocalDatabase}</promptOnNonLocalDatabase>
                            <dropFirst>${liquibase.dropFirst}</dropFirst>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>process-resources</phase>
                                <goals>
                                    <goal>update</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

    <!--
      ** Project dependencies.
     -->
    <dependencies>

        <!--Testing-->
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>2.0.2-beta</version>
            <scope>test</scope>
        </dependency>

        <!--Servlet-->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.0.1</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>jstl</groupId>
            <artifactId>jstl</artifactId>
            <version>1.2</version>
        </dependency>
        <dependency>
            <groupId>taglibs</groupId>
            <artifactId>standard</artifactId>
            <version>1.1.2</version>
        </dependency>

        <!-- JSON -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.8.5</version>
        </dependency>

        <!-- Database -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>42.2.5</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-dbcp2</artifactId>
            <version>2.4.0</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>5.4.1.Final</version>
        </dependency>

        <!--Logger-->
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-api</artifactId>
            <version>2.11.0</version>
        </dependency>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>2.11.0</version>
        </dependency>

        <!-- Library to parse Heroku env. variables Maven Heroku profile properties -->
        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-all</artifactId>
            <version>2.5.6</version>
            <type>pom</type>
        </dependency>

    </dependencies>

    <!--
      ** General build properties.
    -->
    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>

            <!-- Checkstyle -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>2.17</version>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <configuration>
                            <configLocation>checkstyle.xml</configLocation>
                            <encoding>UTF-8</encoding>
                            <consoleOutput>true</consoleOutput>
                            <failsOnError>true</failsOnError>
                            <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- Test coverage: jacoco -->
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>0.8.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!--
              ** Runner for web-application to launch it on heroku.
              ** See also Procfile.
            -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>com.github.jsimone</groupId>
                                    <artifactId>webapp-runner</artifactId>
                                    <version>9.0.16.0</version>
                                    <destFileName>webapp-runner.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
              ** Informational plugin: shows values of maven variables
              ** during project build.
            -->
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <tasks>
                                <echo>db.url: ${db.url}</echo>
                                <echo>db.username: ${db.username}</echo>
                                <echo>db.password: ${db.password}</echo>
                                <echo>db.driver: ${db.driver}</echo>
                                <echo>hibernate.sql.dialect.: ${hibernate.sql.dialect}</echo>
                            </tasks>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>
